package Agenda;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.*;
import java.util.Locale;

public class AgendaGUI extends JFrame {
    private JLabel tituloLabel;
    private JTabbedPane tabbedPane1;
    private JLabel nombreLabel;
    private JTextField ingresarNombreInput;
    private JButton agregarButton;
    private JLabel telefonoLabel;
    private JTextField ingresarTelefonoInput;
    private JPanel panel;
    private JButton buscarButton;
    private JTextArea busquedaText;
    private JTextField busquedaInput;
    private JLabel nombreBusqueda;
    private JScrollPane listaContactos;
    private JLabel ContactosLabel;
    private JTextField textField1;
    private JTextField listaCompletaText;

    Agenda agenda = new Agenda();

    public AgendaGUI() {
        super("agenda de contactos");
        setContentPane(panel);


        agregarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String nombreInput = ingresarNombreInput.getText();
                String telefonoStr = ingresarTelefonoInput.getText();
                boolean esNumero = false;
                for (int i = 0; i < telefonoStr.length(); i++) {
                    if (!Character.isDigit(telefonoStr.charAt(i))) {
                        esNumero = true;
                    }
                }
                if (!nombreInput.isEmpty() && !telefonoStr.isEmpty()) {
                    if (!esNumero == true) {
                        agenda.agregarContacto(nombreInput, Integer.parseInt(telefonoStr));
                    } else {
                        JOptionPane.showMessageDialog(null, "Por favor llene con un numero telefonico valido.", "Error", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Por favor llene todos los campos.", "Error", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        });
        buscarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Contactos buscado = new Contactos();
                String busqueda = busquedaInput.getText();
                buscado = agenda.buscarContacto(busqueda);
                int id = buscado.getId();
                String nombre = buscado.getNombre();
                int telefono = buscado.getTelefono();
                busquedaText.setText("id: " + id + " Nombre: " + nombre + " Telefono: " + telefono);


            }
        });

        tabbedPane1.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                super.focusGained(e);
                String lista = agenda.listaCompleta();
                listaCompletaText.setText(lista);
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridBagLayout());
        panel.setMinimumSize(new Dimension(300, 300));
        panel.setPreferredSize(new Dimension(600, 400));
        tituloLabel = new JLabel();
        Font tituloLabelFont = this.$$$getFont$$$(null, -1, 36, tituloLabel.getFont());
        if (tituloLabelFont != null) tituloLabel.setFont(tituloLabelFont);
        tituloLabel.setMaximumSize(new Dimension(40, 30));
        tituloLabel.setMinimumSize(new Dimension(10, 10));
        tituloLabel.setText("Agenda de contactos");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        panel.add(tituloLabel, gbc);
        tabbedPane1 = new JTabbedPane();
        tabbedPane1.setPreferredSize(new Dimension(480, 200));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        panel.add(tabbedPane1, gbc);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        tabbedPane1.addTab("Agregar Contacto", panel1);
        nombreLabel = new JLabel();
        nombreLabel.setText("Ingrese nombre:");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(nombreLabel, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer1, gbc);
        telefonoLabel = new JLabel();
        telefonoLabel.setText("Ingrese telefono:");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(telefonoLabel, gbc);
        ingresarNombreInput = new JTextField();
        ingresarNombreInput.setColumns(30);
        ingresarNombreInput.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(ingresarNombreInput, gbc);
        ingresarTelefonoInput = new JTextField();
        ingresarTelefonoInput.setColumns(30);
        ingresarTelefonoInput.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(ingresarTelefonoInput, gbc);
        agregarButton = new JButton();
        agregarButton.setText("Agregar");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(agregarButton, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer4, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer5, gbc);
        final JPanel spacer6 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer6, gbc);
        final JPanel spacer7 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer7, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        panel2.setMinimumSize(new Dimension(209, 60));
        panel2.setPreferredSize(new Dimension(500, 100));
        tabbedPane1.addTab("Buscar", panel2);
        busquedaInput = new JTextField();
        busquedaInput.setColumns(30);
        busquedaInput.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(busquedaInput, gbc);
        final JPanel spacer8 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(spacer8, gbc);
        nombreBusqueda = new JLabel();
        nombreBusqueda.setText("Ingrese nombre:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(nombreBusqueda, gbc);
        final JPanel spacer9 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(spacer9, gbc);
        buscarButton = new JButton();
        buscarButton.setText("Buscar");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(buscarButton, gbc);
        final JPanel spacer10 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel2.add(spacer10, gbc);
        busquedaText = new JTextArea();
        busquedaText.setEditable(false);
        busquedaText.setFocusable(false);
        busquedaText.setOpaque(true);
        busquedaText.setPreferredSize(new Dimension(10, 30));
        busquedaText.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.BOTH;
        panel2.add(busquedaText, gbc);
        final JPanel spacer11 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel2.add(spacer11, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        tabbedPane1.addTab("Lista de contactos", panel3);
        listaContactos = new JScrollPane();
        listaContactos.setPreferredSize(new Dimension(400, 100));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 3;
        gbc.fill = GridBagConstraints.BOTH;
        panel3.add(listaContactos, gbc);
        listaCompletaText = new JTextField();
        listaCompletaText.setEditable(false);
        listaCompletaText.setPreferredSize(new Dimension(100, 100));
        listaCompletaText.setText("");
        listaContactos.setViewportView(listaCompletaText);
        ContactosLabel = new JLabel();
        ContactosLabel.setText("Contactos:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel3.add(ContactosLabel, gbc);
        final JPanel spacer12 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel3.add(spacer12, gbc);
        textField1 = new JTextField();
        textField1.setFocusable(false);
        textField1.setMinimumSize(new Dimension(10, 5));
        textField1.setOpaque(false);
        textField1.setPreferredSize(new Dimension(30, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel3.add(textField1, gbc);
        final JPanel spacer13 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel3.add(spacer13, gbc);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.BOTH;
        panel.add(panel4, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}